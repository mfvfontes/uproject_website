/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 12.0 		*/
/*  Created On : 06-out-2015 16:06:34 				*/
/*  DBMS       : MySql 						*/
/* ---------------------------------------------------- */

USE `MySql`
;

SET FOREIGN_KEY_CHECKS=0 ;

/* Drop Tables */

DROP TABLE IF EXISTS `Workshop` CASCADE
;

DROP TABLE IF EXISTS `Warning_type` CASCADE
;

DROP TABLE IF EXISTS `User_restriction` CASCADE
;

DROP TABLE IF EXISTS `User_Message` CASCADE
;

DROP TABLE IF EXISTS `User_image` CASCADE
;

DROP TABLE IF EXISTS `User` CASCADE
;

DROP TABLE IF EXISTS `Uproj_start_net_en` CASCADE
;

DROP TABLE IF EXISTS `UProj_start_net` CASCADE
;

DROP TABLE IF EXISTS `Uproj_acad_en` CASCADE
;

DROP TABLE IF EXISTS `UProj_acad` CASCADE
;

DROP TABLE IF EXISTS `Up_coming_en` CASCADE
;

DROP TABLE IF EXISTS `Up_coming` CASCADE
;

DROP TABLE IF EXISTS `Universitary` CASCADE
;

DROP TABLE IF EXISTS `Team_member` CASCADE
;

DROP TABLE IF EXISTS `Team` CASCADE
;

DROP TABLE IF EXISTS `Task` CASCADE
;

DROP TABLE IF EXISTS `Submission` CASCADE
;

DROP TABLE IF EXISTS `Subject` CASCADE
;

DROP TABLE IF EXISTS `Subject` CASCADE
;

DROP TABLE IF EXISTS `Service_image` CASCADE
;

DROP TABLE IF EXISTS `Service_en` CASCADE
;

DROP TABLE IF EXISTS `Service_content` CASCADE
;

DROP TABLE IF EXISTS `Service` CASCADE
;

DROP TABLE IF EXISTS `Service` CASCADE
;

DROP TABLE IF EXISTS `School_image` CASCADE
;

DROP TABLE IF EXISTS `School` CASCADE
;

DROP TABLE IF EXISTS `Salary_type` CASCADE
;

DROP TABLE IF EXISTS `Salary` CASCADE
;

DROP TABLE IF EXISTS `Safety_Question` CASCADE
;

DROP TABLE IF EXISTS `Public_page` CASCADE
;

DROP TABLE IF EXISTS `Public_image` CASCADE
;

DROP TABLE IF EXISTS `Projectm` CASCADE
;

DROP TABLE IF EXISTS `Project_enmy` CASCADE
;

DROP TABLE IF EXISTS `Project` CASCADE
;

DROP TABLE IF EXISTS `Payment` CASCADE
;

DROP TABLE IF EXISTS `Page_image` CASCADE
;

DROP TABLE IF EXISTS `Notificstion` CASCADE
;

DROP TABLE IF EXISTS `Notification` CASCADE
;

DROP TABLE IF EXISTS `Notification` CASCADE
;

DROP TABLE IF EXISTS `News_en` CASCADE
;

DROP TABLE IF EXISTS `News` CASCADE
;

DROP TABLE IF EXISTS `N_warning` CASCADE
;

DROP TABLE IF EXISTS `N_meeting` CASCADE
;

DROP TABLE IF EXISTS `N_fee` CASCADE
;

DROP TABLE IF EXISTS `Metting` CASCADE
;

DROP TABLE IF EXISTS `Message_Exchange` CASCADE
;

DROP TABLE IF EXISTS `Message_attatchment` CASCADE
;

DROP TABLE IF EXISTS `Message` CASCADE
;

DROP TABLE IF EXISTS `Member` CASCADE
;

DROP TABLE IF EXISTS `Management` CASCADE
;

DROP TABLE IF EXISTS `Junior` CASCADE
;

DROP TABLE IF EXISTS `Invited` CASCADE
;

DROP TABLE IF EXISTS `Interview_candidate` CASCADE
;

DROP TABLE IF EXISTS `Intership_evaluation` CASCADE
;

DROP TABLE IF EXISTS `Intern_Team` CASCADE
;

DROP TABLE IF EXISTS `Intern` CASCADE
;

DROP TABLE IF EXISTS `Interface1` CASCADE
;

DROP TABLE IF EXISTS `Interface1` CASCADE
;

DROP TABLE IF EXISTS `Image` CASCADE
;

DROP TABLE IF EXISTS `Human_resources_dep_manager` CASCADE
;

DROP TABLE IF EXISTS `Honorary_Member` CASCADE
;

DROP TABLE IF EXISTS `Gender` CASCADE
;

DROP TABLE IF EXISTS `Function` CASCADE
;

DROP TABLE IF EXISTS `Full_Member` CASCADE
;

DROP TABLE IF EXISTS `Friend` CASCADE
;

DROP TABLE IF EXISTS `Financial_transaction` CASCADE
;

DROP TABLE IF EXISTS `Financial_dep_manager` CASCADE
;

DROP TABLE IF EXISTS `File` CASCADE
;

DROP TABLE IF EXISTS `Fee_value` CASCADE
;

DROP TABLE IF EXISTS `Fee` CASCADE
;

DROP TABLE IF EXISTS `Expense` CASCADE
;

DROP TABLE IF EXISTS `Event_type` CASCADE
;

DROP TABLE IF EXISTS `Event` CASCADE
;

DROP TABLE IF EXISTS `Dev_team` CASCADE
;

DROP TABLE IF EXISTS `Department` CASCADE
;

DROP TABLE IF EXISTS `Dep_manager` CASCADE
;

DROP TABLE IF EXISTS `DataType1` CASCADE
;

DROP TABLE IF EXISTS `CV` CASCADE
;

DROP TABLE IF EXISTS `Country_image` CASCADE
;

DROP TABLE IF EXISTS `Country` CASCADE
;

DROP TABLE IF EXISTS `Contract_model` CASCADE
;

DROP TABLE IF EXISTS `Contract` CASCADE
;

DROP TABLE IF EXISTS `Contest` CASCADE
;

DROP TABLE IF EXISTS `Content_page` CASCADE
;

DROP TABLE IF EXISTS `Comun_image_dep_managermy` CASCADE
;

DROP TABLE IF EXISTS `Client_Company` CASCADE
;

DROP TABLE IF EXISTS `Class3` CASCADE
;

DROP TABLE IF EXISTS `Class2` CASCADE
;

DROP TABLE IF EXISTS `Class2` CASCADE
;

DROP TABLE IF EXISTS `Class1` CASCADE
;

DROP TABLE IF EXISTS `Candidate` CASCADE
;

DROP TABLE IF EXISTS `Associate` CASCADE
;

DROP TABLE IF EXISTS `Article_page` CASCADE
;

DROP TABLE IF EXISTS `App_letter` CASCADE
;

DROP TABLE IF EXISTS `Admin` CASCADE
;

DROP TABLE IF EXISTS `Activity_en` CASCADE
;

DROP TABLE IF EXISTS `Activity` CASCADE
;

/* Create Tables */

CREATE TABLE IF NOT EXISTS `Workshop`
(
  `instructor` varchar(75) NULL,
	`workshopID` Integer NOT NULL,
	CONSTRAINT `PK_Workshop` PRIMARY KEY (`workshopID`)
)

;

CREATE TABLE IF NOT EXISTS `Warning_type`
(
	`Default_Message` varchar(75) 	 NULL,
	`Type` varchar(75) 	 NULL,
	`warning_typeID` Integer NOT NULL,
	CONSTRAINT `PK_Warning_type` PRIMARY KEY (`warning_typeID`)
)

;

CREATE TABLE IF NOT EXISTS `User_restriction`
(
	`Restriction_type` varchar(75) 	 NULL,
	`user_restrictionID` Integer NOT NULL,
	CONSTRAINT `PK_User_restriction` PRIMARY KEY (`user_restrictionID`)
)

;

CREATE TABLE IF NOT EXISTS `User_Message`
(
	`user_MessageID` Integer NOT NULL,
	`subjectID` Integer 	 NULL,
	CONSTRAINT `PK_User_Message` PRIMARY KEY (`user_MessageID`)
)

;

CREATE TABLE IF NOT EXISTS `User_image`
(
	`user_imageID` Integer NOT NULL,
	CONSTRAINT `PK_User_image` PRIMARY KEY (`user_imageID`)
)

;

CREATE TABLE IF NOT EXISTS `User`
(
	`address` varchar(75) 	 NULL,
	`bank_number` varchar(75) 	 NULL,
	`birthdate` date 	 NULL,
	`Email` varchar(75) 	 NULL,
	`ID_Doc` varchar(75) 	 NULL,
	`Join_Date` Date 	 NULL,
	`Name` varchar(75) 	 NULL,
	`Password` varchar(75) 	 NULL,
	`Safety_Answer` varchar(75) 	 NULL,
	`Surname` varchar(75) 	 NULL,
	`telephone` varchar(75) 	 NULL,
	`Username` varchar(75) 	 NULL,
	`userID` Integer NOT NULL,
	`countryID` Integer 	 NULL,
	`genderID` Integer 	 NULL,
	`user_imageID` Integer NOT NULL,
	CONSTRAINT `PK_User` PRIMARY KEY (`userID`)
)

;

CREATE TABLE IF NOT EXISTS `Uproj_start_net_en`
(
	`uproj_start_net_enID` Integer NOT NULL,
	CONSTRAINT `PK_Uproj_start_net_en` PRIMARY KEY (`uproj_start_net_enID`)
)

;

CREATE TABLE IF NOT EXISTS `UProj_start_net`
(
	`uProj_start_netID` Integer NOT NULL,
	CONSTRAINT `PK_UProj_start_net` PRIMARY KEY (`uProj_start_netID`)
)

;

CREATE TABLE IF NOT EXISTS `Uproj_acad_en`
(
	`uproj_acad_enID` Integer NOT NULL,
	CONSTRAINT `PK_Uproj_acad_en` PRIMARY KEY (`uproj_acad_enID`)
)

;

CREATE TABLE IF NOT EXISTS `UProj_acad`
(
	`uProj_acadID` Integer NOT NULL,
	CONSTRAINT `PK_UProj_acad` PRIMARY KEY (`uProj_acadID`)
)

;

CREATE TABLE IF NOT EXISTS `Up_coming_en`
(
	`up_coming_enID` Integer NOT NULL,
	CONSTRAINT `PK_Up_coming_en` PRIMARY KEY (`up_coming_enID`)
)

;

CREATE TABLE IF NOT EXISTS `Up_coming`
(
	`up_comingID` Integer NOT NULL,
	CONSTRAINT `PK_Up_coming` PRIMARY KEY (`up_comingID`)
)

;

CREATE TABLE IF NOT EXISTS `Universitary`
(
	`universitaryID` Integer NOT NULL,
	`candidateID` Integer NOT NULL,
	CONSTRAINT `PK_Universitary` PRIMARY KEY (`universitaryID`)
)

;

CREATE TABLE IF NOT EXISTS `Team_member`
(
	`team_memberID` Integer NOT NULL,
	`dev_teamID` Integer 	 NULL,
	`memberID` Integer 	 NULL,
	CONSTRAINT `PK_Team_member` PRIMARY KEY (`team_memberID`)
)

;

CREATE TABLE IF NOT EXISTS `Team`
(
	`CreateDate` Date 	 NULL,
	`Leader` varchar(75) 	 NULL,
	`Name` varchar(75) 	 NULL,
	`teamID` Integer NOT NULL,
	CONSTRAINT `PK_Team` PRIMARY KEY (`teamID`)
)

;

CREATE TABLE IF NOT EXISTS `Task`
(
	`Complete` Boolean 	 NULL,
	`Creation` Date 	 NULL,
	`Deadline` Date 	 NULL,
	`Description` varchar(75) 	 NULL,
	`Name` varchar(75) 	 NULL,
	`taskID` Integer NOT NULL,
	`dev_teamID` Integer 	 NULL,
	`projectID` Integer 	 NULL,
	CONSTRAINT `PK_Task` PRIMARY KEY (`taskID`)
)

;

CREATE TABLE IF NOT EXISTS `Submission`
(
	`sub_date` date 	 NULL,
	`submissionID` Integer NOT NULL,
	`eventID` Integer 	 NULL,
	`userID` Integer 	 NULL,
	CONSTRAINT `PK_Submission` PRIMARY KEY (`submissionID`)
)

;

CREATE TABLE IF NOT EXISTS `Subject`
(
	`subjectID` Integer NOT NULL,
	CONSTRAINT `PK_Subject` PRIMARY KEY (`subjectID`)
)

;

CREATE TABLE IF NOT EXISTS `Subject`
(
	`subjectID` Integer NOT NULL,
	CONSTRAINT `PK_Subject` PRIMARY KEY (`subjectID`)
)

;

CREATE TABLE IF NOT EXISTS `Service_image`
(
	`service_imageID` Integer NOT NULL,
	`serviceID` Integer 	 NULL,
	CONSTRAINT `PK_Service_image` PRIMARY KEY (`service_imageID`)
)

;

CREATE TABLE IF NOT EXISTS `Service_en`
(
	`service_enID` Integer NOT NULL,
	CONSTRAINT `PK_Service_en` PRIMARY KEY (`service_enID`)
)

;

CREATE TABLE IF NOT EXISTS `Service_content`
(
	`service_contentID` Integer NOT NULL,
	`serviceID` Integer 	 NULL,
	`public_pageID` Integer 	 NULL,
	CONSTRAINT `PK_Service_content` PRIMARY KEY (`service_contentID`)
)

;

CREATE TABLE IF NOT EXISTS `Service`
(
	`serviceID` Integer NOT NULL,
	CONSTRAINT `PK_Service` PRIMARY KEY (`serviceID`)
)

;

CREATE TABLE IF NOT EXISTS `Service`
(
	`Description` varchar(75) 	 NULL,
	`End_Date` Date 	 NULL,
	`Name` varchar(75) 	 NULL,
	`Start_Date` Date 	 NULL,
	`serviceID` Integer NOT NULL,
	CONSTRAINT `PK_Service` PRIMARY KEY (`serviceID`)
)

;

CREATE TABLE IF NOT EXISTS `School_image`
(
	`school_imageID` Integer NOT NULL,
	`schoolID` Integer NOT NULL,
	CONSTRAINT `PK_School_image` PRIMARY KEY (`school_imageID`)
)

;

CREATE TABLE IF NOT EXISTS `School`
(
	`Location` varchar(75) 	 NULL,
	`Name` varchar(75) 	 NULL,
	`Principal` varchar(75) 	 NULL,
	`schoolID` Integer NOT NULL,
	CONSTRAINT `PK_School` PRIMARY KEY (`schoolID`)
)

;

CREATE TABLE IF NOT EXISTS `Salary_type`
(
	`Value` double 	 NULL,
	`salary_typeID` Integer NOT NULL,
	CONSTRAINT `PK_Salary_type` PRIMARY KEY (`salary_typeID`)
)

;

CREATE TABLE IF NOT EXISTS `Salary`
(
	`Paid` boolean 	 NULL,
	`salaryID` Integer NOT NULL,
	`managementID` Integer 	 NULL,
	`memberID` Integer 	 NULL,
	CONSTRAINT `PK_Salary` PRIMARY KEY (`salaryID`)
)

;

CREATE TABLE IF NOT EXISTS `Safety_Question`
(
	`Question` varchar(75) 	 NULL,
	`safety_QuestionID` Integer NOT NULL,
	`userID` Integer 	 NULL,
	CONSTRAINT `PK_Safety_Question` PRIMARY KEY (`safety_QuestionID`)
)

;

CREATE TABLE IF NOT EXISTS `Public_page`
(
	`Subheading` varchar(75) 	 NULL,
	`Text` varchar(75) 	 NULL,
	`public_pageID` Integer NOT NULL,
	CONSTRAINT `PK_Public_page` PRIMARY KEY (`public_pageID`)
)

;

CREATE TABLE IF NOT EXISTS `Public_image`
(
	`public_imageID` Integer NOT NULL,
	CONSTRAINT `PK_Public_image` PRIMARY KEY (`public_imageID`)
)

;

CREATE TABLE IF NOT EXISTS `Projectm`
(
	`projectID` Integer NOT NULL,
	`client_CompanyID` Integer 	 NULL,
	`contractID` Integer NOT NULL,
	CONSTRAINT `PK_Project` PRIMARY KEY (`projectID`)
)

;

CREATE TABLE IF NOT EXISTS `Project_enmy`
(
	`project_enID` Integer NOT NULL,
	CONSTRAINT `PK_Project_en` PRIMARY KEY (`project_enID`)
)

;

CREATE TABLE IF NOT EXISTS `Project`
(
	`projectID` Integer NOT NULL,
	CONSTRAINT `PK_Project` PRIMARY KEY (`projectID`)
)

;

CREATE TABLE IF NOT EXISTS `Payment`
(
	`paymentID` Integer NOT NULL,
	`client_CompanyID` Integer 	 NULL,
	CONSTRAINT `PK_Payment` PRIMARY KEY (`paymentID`)
)

;

CREATE TABLE IF NOT EXISTS `Page_image`
(
	`page_imageID` Integer NOT NULL,
	`public_imageID` Integer 	 NULL,
	`public_pageID` Integer 	 NULL,
	CONSTRAINT `PK_Page_image` PRIMARY KEY (`page_imageID`)
)

;

CREATE TABLE IF NOT EXISTS `Notificstion`
(
	`notificstionID` Integer NOT NULL,
	CONSTRAINT `PK_Notificstion` PRIMARY KEY (`notificstionID`)
)

;

CREATE TABLE IF NOT EXISTS `Notification`
(
	`notificationID` Integer NOT NULL,
	CONSTRAINT `PK_Notification` PRIMARY KEY (`notificationID`)
)

;

CREATE TABLE IF NOT EXISTS `Notification`
(
	`notificationID` Integer NOT NULL,
	CONSTRAINT `PK_Notification` PRIMARY KEY (`notificationID`)
)

;

CREATE TABLE IF NOT EXISTS `News_en`
(
	`news_enID` Integer NOT NULL,
	CONSTRAINT `PK_News_en` PRIMARY KEY (`news_enID`)
)

;

CREATE TABLE IF NOT EXISTS `News`
(
	`newsID` Integer NOT NULL,
	CONSTRAINT `PK_News` PRIMARY KEY (`newsID`)
)

;

CREATE TABLE IF NOT EXISTS `N_warning`
(
	`n_warningID` Integer NOT NULL,
	`warning_typeID` Integer 	 NULL,
	CONSTRAINT `PK_N_warning` PRIMARY KEY (`n_warningID`)
)

;

CREATE TABLE IF NOT EXISTS `N_meeting`
(
	`n_meetingID` Integer NOT NULL,
	`mettingID` Integer 	 NULL,
	CONSTRAINT `PK_N_meeting` PRIMARY KEY (`n_meetingID`)
)

;

CREATE TABLE IF NOT EXISTS `N_fee`
(
	`n_feeID` Integer NOT NULL,
	CONSTRAINT `PK_N_fee` PRIMARY KEY (`n_feeID`)
)

;

CREATE TABLE IF NOT EXISTS `Metting`
(
	`Date` date 	 NULL,
	`Description` varchar(75) 	 NULL,
	`Location` varchar(75) 	 NULL,
	`mettingID` Integer NOT NULL,
	`invitedID` Integer 	 NULL,
	CONSTRAINT `PK_Metting` PRIMARY KEY (`mettingID`)
)

;

CREATE TABLE IF NOT EXISTS `Message_Exchange`
(
	`message_ExchangeID` Integer NOT NULL,
	`userID` Integer 	 NULL,
	`user_MessageID` Integer 	 NULL,
	CONSTRAINT `PK_Message_Exchange` PRIMARY KEY (`message_ExchangeID`)
)

;

CREATE TABLE IF NOT EXISTS `Message_attatchment`
(
	`message_attatchmentID` Integer NOT NULL,
	`user_MessageID` Integer 	 NULL,
	CONSTRAINT `PK_Message_attatchment` PRIMARY KEY (`message_attatchmentID`)
)

;

CREATE TABLE IF NOT EXISTS `Message`
(
	`Sent_Date` date 	 NULL,
	`Subject` varchar(75) 	 NULL,
	`Text` varchar(75) 	 NULL,
	`messageID` Integer NOT NULL,
	CONSTRAINT `PK_Message` PRIMARY KEY (`messageID`)
)

;

CREATE TABLE IF NOT EXISTS `Member`
(
	`memberID` Integer NOT NULL,
	`fee_valueID` Integer 	 NULL,
	`functionID` Integer 	 NULL,
	`salary_typeID` Integer 	 NULL,
	CONSTRAINT `PK_Member` PRIMARY KEY (`memberID`)
)

;

CREATE TABLE IF NOT EXISTS `Management`
(
	`managementID` Integer NOT NULL,
	`fee_valueID` Integer 	 NULL,
	`salary_typeID` Integer 	 NULL,
	CONSTRAINT `PK_Management` PRIMARY KEY (`managementID`)
)

;

CREATE TABLE IF NOT EXISTS `Junior`
(
	`juniorID` Integer NOT NULL,
	`schoolID` Integer 	 NULL,
	CONSTRAINT `PK_Junior` PRIMARY KEY (`juniorID`)
)

;

CREATE TABLE IF NOT EXISTS `Invited`
(
	`Member_Type` varchar(75) 	 NULL,
	`invitedID` Integer NOT NULL,
	CONSTRAINT `PK_Invited` PRIMARY KEY (`invitedID`)
)

;

CREATE TABLE IF NOT EXISTS `Interview_candidate`
(
	`Accepted` Boolean 	 NULL,
	`Interview_Date` Date 	 NULL,
	`Interview_local` varchar(75) 	 NULL,
	`interview_candidateID` Integer NOT NULL,
	`candidateID` Integer NOT NULL,
	`human_resources_dep_managerID` Integer 	 NULL,
	CONSTRAINT `PK_Interview_candidate` PRIMARY KEY (`interview_candidateID`)
)

;

CREATE TABLE IF NOT EXISTS `Intership_evaluation`
(
	`Description` varchar(75) 	 NULL,
	`evaluation` int 	 NULL,
	`intership_evaluationID` Integer NOT NULL,
	CONSTRAINT `PK_Intership_evaluation` PRIMARY KEY (`intership_evaluationID`)
)

;

CREATE TABLE IF NOT EXISTS `Intern_Team`
(
	`intern_TeamID` Integer NOT NULL,
	CONSTRAINT `PK_Intern_Team` PRIMARY KEY (`intern_TeamID`)
)

;

CREATE TABLE IF NOT EXISTS `Intern`
(
	`start_date` date 	 NULL,
	`internID` Integer NOT NULL,
	`juniorID` Integer NOT NULL,
	`intern_TeamID` Integer 	 NULL,
	`intership_evaluationID` Integer NOT NULL,
	CONSTRAINT `PK_Intern` PRIMARY KEY (`internID`)
)

;

CREATE TABLE IF NOT EXISTS `Interface1`
(
	`interface1ID` Integer NOT NULL,
	CONSTRAINT `PK_Interface1` PRIMARY KEY (`interface1ID`)
)

;

CREATE TABLE IF NOT EXISTS `Interface1`
(
	`interface1ID` Integer NOT NULL,
	CONSTRAINT `PK_Interface1` PRIMARY KEY (`interface1ID`)
)

;

CREATE TABLE IF NOT EXISTS `Image`
(
	`Alt` varchar(75) 	 NULL,
	`Url` varchar(75) 	 NULL,
	`imageID` Integer NOT NULL,
	CONSTRAINT `PK_Image` PRIMARY KEY (`imageID`)
)

;

CREATE TABLE IF NOT EXISTS `Human_resources_dep_manager`
(
	`human_resources_dep_managerID` Integer NOT NULL,
	CONSTRAINT `PK_Human_resources_dep_manager` PRIMARY KEY (`human_resources_dep_managerID`)
)

;

CREATE TABLE IF NOT EXISTS `Honorary_Member`
(
	`honorary_MemberID` Integer NOT NULL,
	CONSTRAINT `PK_Honorary_Member` PRIMARY KEY (`honorary_MemberID`)
)

;

CREATE TABLE IF NOT EXISTS `Gender`
(
	`Name` varchar(75) 	 NULL,
	`genderID` Integer NOT NULL,
	CONSTRAINT `PK_Gender` PRIMARY KEY (`genderID`)
)

;

CREATE TABLE IF NOT EXISTS `Function`
(
	`Name` varchar(75) 	 NULL,
	`functionID` Integer NOT NULL,
	CONSTRAINT `PK_Function` PRIMARY KEY (`functionID`)
)

;

CREATE TABLE IF NOT EXISTS `Full_Member`
(
	`full_MemberID` Integer NOT NULL,
	CONSTRAINT `PK_Full_Member` PRIMARY KEY (`full_MemberID`)
)

;

CREATE TABLE IF NOT EXISTS `Friend`
(
	`Accepted` boolean 	 NULL,
	`Invite_Date` Date 	 NULL,
	`Start_Date` Date 	 NULL,
	`friendID` Integer NOT NULL,
	`userID` Integer 	 NULL,
	CONSTRAINT `PK_Friend` PRIMARY KEY (`friendID`)
)

;

CREATE TABLE IF NOT EXISTS `Financial_transaction`
(
	`Date` date 	 NULL,
	`Value` Double 	 NULL,
	`financial_transactionID` Integer NOT NULL,
	CONSTRAINT `PK_Financial_transaction` PRIMARY KEY (`financial_transactionID`)
)

;

CREATE TABLE IF NOT EXISTS `Financial_dep_manager`
(
	`financial_dep_managerID` Integer NOT NULL,
	CONSTRAINT `PK_Financial_dep_manager` PRIMARY KEY (`financial_dep_managerID`)
)

;

CREATE TABLE IF NOT EXISTS `File`
(
	`Alt` varchar(75) 	 NULL,
	`Url` varchar(75) 	 NULL,
	`fileID` Integer NOT NULL,
	CONSTRAINT `PK_File` PRIMARY KEY (`fileID`)
)

;

CREATE TABLE IF NOT EXISTS `Fee_value`
(
	`Value` int 	 NULL,
	`fee_valueID` Integer NOT NULL,
	CONSTRAINT `PK_Fee_value` PRIMARY KEY (`fee_valueID`)
)

;

CREATE TABLE IF NOT EXISTS `Fee`
(
	`Paid` boolean 	 NULL,
	`feeID` Integer NOT NULL,
	`associateID` Integer 	 NULL,
	`memberID` Integer 	 NULL,
	`managementID` Integer 	 NULL,
	CONSTRAINT `PK_Fee` PRIMARY KEY (`feeID`)
)

;

CREATE TABLE IF NOT EXISTS `Expense`
(
	`Description` varchar(75) 	 NULL,
	`expenseID` Integer NOT NULL,
	CONSTRAINT `PK_Expense` PRIMARY KEY (`expenseID`)
)

;

CREATE TABLE IF NOT EXISTS `Event_type`
(
	`event_typeID` Integer NOT NULL,
	CONSTRAINT `PK_Event_type` PRIMARY KEY (`event_typeID`)
)

;

CREATE TABLE IF NOT EXISTS `Event`
(
	`Location` varchar(75) 	 NULL,
	`eventID` Integer NOT NULL,
	CONSTRAINT `PK_Event` PRIMARY KEY (`eventID`)
)

;

CREATE TABLE IF NOT EXISTS `Dev_team`
(
	`dev_teamID` Integer NOT NULL,
	`projectID` Integer 	 NULL,
	CONSTRAINT `PK_Dev_team` PRIMARY KEY (`dev_teamID`)
)

;

CREATE TABLE IF NOT EXISTS `Department`
(
	`Name` varchar(75) 	 NULL,
	`departmentID` Integer NOT NULL,
	`memberID` Integer NOT NULL,
	CONSTRAINT `PK_Department` PRIMARY KEY (`departmentID`)
)

;

CREATE TABLE IF NOT EXISTS `Dep_manager`
(
	`dep_managerID` Integer NOT NULL,
	`departmentID` Integer NOT NULL,
	CONSTRAINT `PK_Dep_manager` PRIMARY KEY (`dep_managerID`)
)

;

CREATE TABLE IF NOT EXISTS `DataType1`
(
	`dataType1ID` Integer NOT NULL,
	CONSTRAINT `PK_DataType1` PRIMARY KEY (`dataType1ID`)
)

;

CREATE TABLE IF NOT EXISTS `CV`
(
	`cVID` Integer NOT NULL,
	CONSTRAINT `PK_CV` PRIMARY KEY (`cVID`)
)

;

CREATE TABLE IF NOT EXISTS `Country_image`
(
	`country_imageID` Integer NOT NULL,
	CONSTRAINT `PK_Country_image` PRIMARY KEY (`country_imageID`)
)

;

CREATE TABLE IF NOT EXISTS `Country`
(
	`Name` varchar(75) 	 NULL,
	`countryID` Integer NOT NULL,
	`country_imageID` Integer NOT NULL,
	CONSTRAINT `PK_Country` PRIMARY KEY (`countryID`)
)

;

CREATE TABLE IF NOT EXISTS `Contract_model`
(
	`Description` varchar(75) 	 NULL,
	`Name` varchar(75) 	 NULL,
	`contract_modelID` Integer NOT NULL,
	CONSTRAINT `PK_Contract_model` PRIMARY KEY (`contract_modelID`)
)

;

CREATE TABLE IF NOT EXISTS `Contract`
(
	`Detail` varchar(75) 	 NULL,
	`End_Date` Date 	 NULL,
	`Start_Date` Date 	 NULL,
	`contractID` Integer NOT NULL,
	`contract_modelID` Integer 	 NULL,
	CONSTRAINT `PK_Contract` PRIMARY KEY (`contractID`)
)

;

CREATE TABLE IF NOT EXISTS `Contest`
(
	`Jury` varchar(75) 	 NULL,
	`Prize` varchar(75) 	 NULL,
	`contestID` Integer NOT NULL,
	CONSTRAINT `PK_Contest` PRIMARY KEY (`contestID`)
)

;

CREATE TABLE IF NOT EXISTS `Content_page`
(
	`content_pageID` Integer NOT NULL,
	CONSTRAINT `PK_Content_page` PRIMARY KEY (`content_pageID`)
)

;

CREATE TABLE IF NOT EXISTS `Comun_image_dep_managermy`
(
	`comun_image_dep_managerID` Integer NOT NULL,
	CONSTRAINT `PK_Comun_image_dep_manager` PRIMARY KEY (`comun_image_dep_managerID`)
)

;

CREATE TABLE IF NOT EXISTS `Client_Company`
(
	`Business_Area` varchar(75) 	 NULL,
	`CEO` varchar(75) 	 NULL,
	`Description` varchar(75) 	 NULL,
	`client_CompanyID` Integer NOT NULL,
	CONSTRAINT `PK_Client_Company` PRIMARY KEY (`client_CompanyID`)
)

;

CREATE TABLE IF NOT EXISTS `Class3`
(
	`class3ID` Integer NOT NULL,
	`class1ID` Integer 	 NULL,
	CONSTRAINT `PK_Class3` PRIMARY KEY (`class3ID`)
)

;

CREATE TABLE IF NOT EXISTS `Class2`
(
	`class2ID` Integer NOT NULL,
	CONSTRAINT `PK_Class2` PRIMARY KEY (`class2ID`)
)

;

CREATE TABLE IF NOT EXISTS `Class2`
(
	`class2ID` Integer NOT NULL,
	`serviceID` Integer 	 NULL,
	`user_restrictionID` Integer 	 NULL,
	CONSTRAINT `PK_Class2` PRIMARY KEY (`class2ID`)
)

;

CREATE TABLE IF NOT EXISTS `Class1`
(
	`class1ID` Integer NOT NULL,
	CONSTRAINT `PK_Class1` PRIMARY KEY (`class1ID`)
)

;

CREATE TABLE IF NOT EXISTS `Candidate`
(
	`Accepted` Boolean 	 NULL,
	`Date` date 	 NULL,
	`candidateID` Integer NOT NULL,
	`app_letterID` Integer NOT NULL,
	`cVID` Integer 	 NULL,
	CONSTRAINT `PK_Candidate` PRIMARY KEY (`candidateID`)
)

;

CREATE TABLE IF NOT EXISTS `Associate`
(
	`associateID` Integer NOT NULL,
	`fee_valueID` Integer 	 NULL,
	CONSTRAINT `PK_Associate` PRIMARY KEY (`associateID`)
)

;

CREATE TABLE IF NOT EXISTS `Article_page`
(
	`Date` date 	 NULL,
	`article_pageID` Integer NOT NULL,
	CONSTRAINT `PK_Article_page` PRIMARY KEY (`article_pageID`)
)

;

CREATE TABLE IF NOT EXISTS `App_letter`
(
	`app_letterID` Integer NOT NULL,
	CONSTRAINT `PK_App_letter` PRIMARY KEY (`app_letterID`)
)

;

CREATE TABLE IF NOT EXISTS `Admin`
(
	`adminID` Integer NOT NULL,
	CONSTRAINT `PK_Admin` PRIMARY KEY (`adminID`)
)

;

CREATE TABLE IF NOT EXISTS `Activity_en`
(
	`activity_enID` Integer NOT NULL,
	CONSTRAINT `PK_Activity_en` PRIMARY KEY (`activity_enID`)
)

;

CREATE TABLE IF NOT EXISTS `Activity`
(
	`activityID` Integer NOT NULL,
	CONSTRAINT `PK_Activity` PRIMARY KEY (`activityID`)
)

;

/* Create Foreign Key Constraints */

ALTER TABLE `Workshop` 
 ADD CONSTRAINT `FK_Workshop_Event`
	FOREIGN KEY (`workshopID`) REFERENCES `Event` (`eventID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `User_Message` 
 ADD CONSTRAINT `FK_User_Message_Message`
	FOREIGN KEY (`user_MessageID`) REFERENCES `Message` (`messageID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `User_Message` 
 ADD CONSTRAINT `FK_User_Message_Subject`
	FOREIGN KEY (`subjectID`) REFERENCES `Subject` (`subjectID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `User_image` 
 ADD CONSTRAINT `FK_User_image_Image`
	FOREIGN KEY (`user_imageID`) REFERENCES `Image` (`imageID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `User` 
 ADD CONSTRAINT `FK_User_Country`
	FOREIGN KEY (`countryID`) REFERENCES `Country` (`countryID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `User` 
 ADD CONSTRAINT `FK_User_Gender`
	FOREIGN KEY (`genderID`) REFERENCES `Gender` (`genderID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `User` 
 ADD CONSTRAINT `FK_User_User_image`
	FOREIGN KEY (`user_imageID`) REFERENCES `User_image` (`user_imageID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Uproj_start_net_en` 
 ADD CONSTRAINT `FK_Uproj_start_net_en_UProj_start_net`
	FOREIGN KEY (`uproj_start_net_enID`) REFERENCES `UProj_start_net` (`uProj_start_netID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `UProj_start_net` 
 ADD CONSTRAINT `FK_UProj_start_net_Content_page`
	FOREIGN KEY (`uProj_start_netID`) REFERENCES `Content_page` (`content_pageID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Uproj_acad_en` 
 ADD CONSTRAINT `FK_Uproj_acad_en_UProj_acad`
	FOREIGN KEY (`uproj_acad_enID`) REFERENCES `UProj_acad` (`uProj_acadID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `UProj_acad` 
 ADD CONSTRAINT `FK_UProj_acad_Content_page`
	FOREIGN KEY (`uProj_acadID`) REFERENCES `Content_page` (`content_pageID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Up_coming_en` 
 ADD CONSTRAINT `FK_Up_coming_en_Up_coming`
	FOREIGN KEY (`up_coming_enID`) REFERENCES `Up_coming` (`up_comingID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Up_coming` 
 ADD CONSTRAINT `FK_Up_coming_Article_page`
	FOREIGN KEY (`up_comingID`) REFERENCES `Article_page` (`article_pageID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Universitary` 
 ADD CONSTRAINT `FK_Universitary_Associate`
	FOREIGN KEY (`universitaryID`) REFERENCES `Associate` (`associateID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Universitary` 
 ADD CONSTRAINT `FK_Universitary_Candidate`
	FOREIGN KEY (`candidateID`) REFERENCES `Candidate` (`candidateID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Team_member` 
 ADD CONSTRAINT `FK_Team_member_Dev_team`
	FOREIGN KEY (`dev_teamID`) REFERENCES `Dev_team` (`dev_teamID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Team_member` 
 ADD CONSTRAINT `FK_Team_member_Member`
	FOREIGN KEY (`memberID`) REFERENCES `Member` (`memberID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Task` 
 ADD CONSTRAINT `FK_Task_Dev_team`
	FOREIGN KEY (`dev_teamID`) REFERENCES `Dev_team` (`dev_teamID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Task` 
 ADD CONSTRAINT `FK_Task_Project`
	FOREIGN KEY (`projectID`) REFERENCES `Projectm` (`projectID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Submission` 
 ADD CONSTRAINT `FK_Submission_Event`
	FOREIGN KEY (`eventID`) REFERENCES `Event` (`eventID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Submission` 
 ADD CONSTRAINT `FK_Submission_User`
	FOREIGN KEY (`userID`) REFERENCES `User` (`userID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Service_image` 
 ADD CONSTRAINT `FK_Service_image_Image`
	FOREIGN KEY (`service_imageID`) REFERENCES `Image` (`imageID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Service_image` 
 ADD CONSTRAINT `FK_Service_image_Service`
	FOREIGN KEY (`serviceID`) REFERENCES `Service` (`serviceID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Service_en` 
 ADD CONSTRAINT `FK_Service_en_Service`
	FOREIGN KEY (`service_enID`) REFERENCES `Service` (`serviceID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Service_content` 
 ADD CONSTRAINT `FK_Service_content_Service`
	FOREIGN KEY (`serviceID`) REFERENCES `Service` (`serviceID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Service_content` 
 ADD CONSTRAINT `FK_Service_content_Public_page`
	FOREIGN KEY (`public_pageID`) REFERENCES `Public_page` (`public_pageID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Service` 
 ADD CONSTRAINT `FK_Service_Content_page`
	FOREIGN KEY (`serviceID`) REFERENCES `Content_page` (`content_pageID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `School_image` 
 ADD CONSTRAINT `FK_School_image_Image`
	FOREIGN KEY (`school_imageID`) REFERENCES `Image` (`imageID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `School_image` 
 ADD CONSTRAINT `FK_School_image_School`
	FOREIGN KEY (`schoolID`) REFERENCES `School` (`schoolID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Salary` 
 ADD CONSTRAINT `FK_Salary_Financial_transaction`
	FOREIGN KEY (`salaryID`) REFERENCES `Financial_transaction` (`financial_transactionID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Salary` 
 ADD CONSTRAINT `FK_Salary_Management`
	FOREIGN KEY (`managementID`) REFERENCES `Management` (`managementID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Salary` 
 ADD CONSTRAINT `FK_Salary_Member`
	FOREIGN KEY (`memberID`) REFERENCES `Member` (`memberID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Safety_Question` 
 ADD CONSTRAINT `FK_Safety_Question_User`
	FOREIGN KEY (`userID`) REFERENCES `User` (`userID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Public_image` 
 ADD CONSTRAINT `FK_Public_image_Image`
	FOREIGN KEY (`public_imageID`) REFERENCES `Image` (`imageID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Projectm` 
 ADD CONSTRAINT `FK_Project_Client_Company`
	FOREIGN KEY (`client_CompanyID`) REFERENCES `Client_Company` (`client_CompanyID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Projectm` 
 ADD CONSTRAINT `FK_Project_Contract`
	FOREIGN KEY (`contractID`) REFERENCES `Contract` (`contractID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Projectm` 
 ADD CONSTRAINT `FK_Project_Service`
	FOREIGN KEY (`projectID`) REFERENCES `Service` (`serviceID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Project_enmy` 
 ADD CONSTRAINT `FK_Project_en_Project`
	FOREIGN KEY (`project_enID`) REFERENCES `Project` (`projectID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Project` 
 ADD CONSTRAINT `FK_Project_Article_page`
	FOREIGN KEY (`projectID`) REFERENCES `Article_page` (`article_pageID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Payment` 
 ADD CONSTRAINT `FK_Payment_Client_Company`
	FOREIGN KEY (`client_CompanyID`) REFERENCES `Client_Company` (`client_CompanyID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Payment` 
 ADD CONSTRAINT `FK_Payment_Financial_transaction`
	FOREIGN KEY (`paymentID`) REFERENCES `Financial_transaction` (`financial_transactionID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Page_image` 
 ADD CONSTRAINT `FK_Page_image_Public_image`
	FOREIGN KEY (`public_imageID`) REFERENCES `Public_image` (`public_imageID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Page_image` 
 ADD CONSTRAINT `FK_Page_image_Public_page`
	FOREIGN KEY (`public_pageID`) REFERENCES `Public_page` (`public_pageID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Notificstion` 
 ADD CONSTRAINT `FK_Notificstion_Message`
	FOREIGN KEY (`notificstionID`) REFERENCES `Message` (`messageID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Notification` 
 ADD CONSTRAINT `FK_Notification_Message`
	FOREIGN KEY (`notificationID`) REFERENCES `Message` (`messageID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `News_en` 
 ADD CONSTRAINT `FK_News_en_News`
	FOREIGN KEY (`news_enID`) REFERENCES `News` (`newsID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `News` 
 ADD CONSTRAINT `FK_News_Article_page`
	FOREIGN KEY (`newsID`) REFERENCES `Article_page` (`article_pageID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `N_warning` 
 ADD CONSTRAINT `FK_N_warning_Warning_type`
	FOREIGN KEY (`warning_typeID`) REFERENCES `Warning_type` (`warning_typeID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `N_warning` 
 ADD CONSTRAINT `FK_N_warning_Notification`
	FOREIGN KEY (`n_warningID`) REFERENCES `Notification` (`notificationID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `N_meeting` 
 ADD CONSTRAINT `FK_N_meeting_Metting`
	FOREIGN KEY (`mettingID`) REFERENCES `Metting` (`mettingID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `N_meeting` 
 ADD CONSTRAINT `FK_N_meeting_Notification`
	FOREIGN KEY (`n_meetingID`) REFERENCES `Notification` (`notificationID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `N_fee` 
 ADD CONSTRAINT `FK_N_fee_User_Message`
	FOREIGN KEY (`n_feeID`) REFERENCES `User_Message` (`user_MessageID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Metting` 
 ADD CONSTRAINT `FK_Metting_Invited`
	FOREIGN KEY (`invitedID`) REFERENCES `Invited` (`invitedID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Message_Exchange` 
 ADD CONSTRAINT `FK_Message_Exchange_User`
	FOREIGN KEY (`userID`) REFERENCES `User` (`userID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Message_Exchange` 
 ADD CONSTRAINT `FK_Message_Exchange_User_Message`
	FOREIGN KEY (`user_MessageID`) REFERENCES `User_Message` (`user_MessageID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Message_attatchment` 
 ADD CONSTRAINT `FK_Message_attatchment_File`
	FOREIGN KEY (`message_attatchmentID`) REFERENCES `File` (`fileID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Message_attatchment` 
 ADD CONSTRAINT `FK_Message_attatchment_User_Message`
	FOREIGN KEY (`user_MessageID`) REFERENCES `User_Message` (`user_MessageID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Member` 
 ADD CONSTRAINT `FK_Member_Fee_value`
	FOREIGN KEY (`fee_valueID`) REFERENCES `Fee_value` (`fee_valueID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Member` 
 ADD CONSTRAINT `FK_Member_Function`
	FOREIGN KEY (`functionID`) REFERENCES `Function` (`functionID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Member` 
 ADD CONSTRAINT `FK_Member_User`
	FOREIGN KEY (`memberID`) REFERENCES `User` (`userID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Member` 
 ADD CONSTRAINT `FK_Member_Salary_type`
	FOREIGN KEY (`salary_typeID`) REFERENCES `Salary_type` (`salary_typeID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Management` 
 ADD CONSTRAINT `FK_Management_Fee_value`
	FOREIGN KEY (`fee_valueID`) REFERENCES `Fee_value` (`fee_valueID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Management` 
 ADD CONSTRAINT `FK_Management_User`
	FOREIGN KEY (`managementID`) REFERENCES `User` (`userID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Management` 
 ADD CONSTRAINT `FK_Management_Salary_type`
	FOREIGN KEY (`salary_typeID`) REFERENCES `Salary_type` (`salary_typeID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Junior` 
 ADD CONSTRAINT `FK_Junior_Associate`
	FOREIGN KEY (`juniorID`) REFERENCES `Associate` (`associateID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Junior` 
 ADD CONSTRAINT `FK_Junior_School`
	FOREIGN KEY (`schoolID`) REFERENCES `School` (`schoolID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Interview_candidate` 
 ADD CONSTRAINT `FK_Interview_candidate_Candidate`
	FOREIGN KEY (`candidateID`) REFERENCES `Candidate` (`candidateID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Interview_candidate` 
 ADD CONSTRAINT `FK_Interview_candidate_Human_resources_dep_manager`
	FOREIGN KEY (`human_resources_dep_managerID`) REFERENCES `Human_resources_dep_manager` (`human_resources_dep_managerID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Intern_Team` 
 ADD CONSTRAINT `FK_Intern_Team_Team`
	FOREIGN KEY (`intern_TeamID`) REFERENCES `Team` (`teamID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Intern` 
 ADD CONSTRAINT `FK_Intern_Junior`
	FOREIGN KEY (`juniorID`) REFERENCES `Junior` (`juniorID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Intern` 
 ADD CONSTRAINT `FK_Intern_Intern_Team`
	FOREIGN KEY (`intern_TeamID`) REFERENCES `Intern_Team` (`intern_TeamID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Intern` 
 ADD CONSTRAINT `FK_Intern_Intership_evaluation`
	FOREIGN KEY (`intership_evaluationID`) REFERENCES `Intership_evaluation` (`intership_evaluationID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Human_resources_dep_manager` 
 ADD CONSTRAINT `FK_Human_resources_dep_manager_Dep_manager`
	FOREIGN KEY (`human_resources_dep_managerID`) REFERENCES `Dep_manager` (`dep_managerID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Honorary_Member` 
 ADD CONSTRAINT `FK_Honorary_Member_User`
	FOREIGN KEY (`honorary_MemberID`) REFERENCES `User` (`userID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Full_Member` 
 ADD CONSTRAINT `FK_Full_Member_Member`
	FOREIGN KEY (`full_MemberID`) REFERENCES `Member` (`memberID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Friend` 
 ADD CONSTRAINT `FK_Friend_User`
	FOREIGN KEY (`userID`) REFERENCES `User` (`userID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Financial_dep_manager` 
 ADD CONSTRAINT `FK_Financial_dep_manager_Dep_manager`
	FOREIGN KEY (`financial_dep_managerID`) REFERENCES `Dep_manager` (`dep_managerID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Fee` 
 ADD CONSTRAINT `FK_Fee_Associate`
	FOREIGN KEY (`associateID`) REFERENCES `Associate` (`associateID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Fee` 
 ADD CONSTRAINT `FK_Fee_Member`
	FOREIGN KEY (`memberID`) REFERENCES `Member` (`memberID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Fee` 
 ADD CONSTRAINT `FK_Fee_Management`
	FOREIGN KEY (`managementID`) REFERENCES `Management` (`managementID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Fee` 
 ADD CONSTRAINT `FK_Fee_Financial_transaction`
	FOREIGN KEY (`feeID`) REFERENCES `Financial_transaction` (`financial_transactionID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Expense` 
 ADD CONSTRAINT `FK_Expense_Financial_transaction`
	FOREIGN KEY (`expenseID`) REFERENCES `Financial_transaction` (`financial_transactionID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Event` 
 ADD CONSTRAINT `FK_Event_Service`
	FOREIGN KEY (`eventID`) REFERENCES `Service` (`serviceID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Dev_team` 
 ADD CONSTRAINT `FK_Dev_team_Project`
	FOREIGN KEY (`projectID`) REFERENCES `Projectm` (`projectID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Dev_team` 
 ADD CONSTRAINT `FK_Dev_team_Team`
	FOREIGN KEY (`dev_teamID`) REFERENCES `Team` (`teamID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Department` 
 ADD CONSTRAINT `FK_Department_Member`
	FOREIGN KEY (`memberID`) REFERENCES `Member` (`memberID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Dep_manager` 
 ADD CONSTRAINT `FK_Dep_manager_Full_Member`
	FOREIGN KEY (`dep_managerID`) REFERENCES `Full_Member` (`full_MemberID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Dep_manager` 
 ADD CONSTRAINT `FK_Dep_manager_Department`
	FOREIGN KEY (`departmentID`) REFERENCES `Department` (`departmentID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `CV` 
 ADD CONSTRAINT `FK_CV_File`
	FOREIGN KEY (`cVID`) REFERENCES `File` (`fileID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Country_image` 
 ADD CONSTRAINT `FK_Country_image_Image`
	FOREIGN KEY (`country_imageID`) REFERENCES `Image` (`imageID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Country` 
 ADD CONSTRAINT `FK_Country_Country_image`
	FOREIGN KEY (`country_imageID`) REFERENCES `Country_image` (`country_imageID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Contract` 
 ADD CONSTRAINT `FK_Contract_Contract_model`
	FOREIGN KEY (`contract_modelID`) REFERENCES `Contract_model` (`contract_modelID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Contest` 
 ADD CONSTRAINT `FK_Contest_Event`
	FOREIGN KEY (`contestID`) REFERENCES `Event` (`eventID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Content_page` 
 ADD CONSTRAINT `FK_Content_page_Public_page`
	FOREIGN KEY (`content_pageID`) REFERENCES `Public_page` (`public_pageID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Comun_image_dep_managermy` 
 ADD CONSTRAINT `FK_Comun_image_dep_manager_Dep_manager`
	FOREIGN KEY (`comun_image_dep_managerID`) REFERENCES `Dep_manager` (`dep_managerID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Client_Company` 
 ADD CONSTRAINT `FK_Client_Company_Associate`
	FOREIGN KEY (`client_CompanyID`) REFERENCES `Associate` (`associateID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Class3` 
 ADD CONSTRAINT `FK_Class3_Class1`
	FOREIGN KEY (`class1ID`) REFERENCES `Class1` (`class1ID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Class2` 
 ADD CONSTRAINT `FK_Class2_Service`
	FOREIGN KEY (`serviceID`) REFERENCES `Service` (`serviceID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Class2` 
 ADD CONSTRAINT `FK_Class2_User_restriction`
	FOREIGN KEY (`user_restrictionID`) REFERENCES `User_restriction` (`user_restrictionID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Class1` 
 ADD CONSTRAINT `FK_Class1_Class2`
	FOREIGN KEY (`class1ID`) REFERENCES `Class2` (`class2ID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Candidate` 
 ADD CONSTRAINT `FK_Candidate_App_letter`
	FOREIGN KEY (`app_letterID`) REFERENCES `App_letter` (`app_letterID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Candidate` 
 ADD CONSTRAINT `FK_Candidate_CV`
	FOREIGN KEY (`cVID`) REFERENCES `CV` (`cVID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Associate` 
 ADD CONSTRAINT `FK_Associate_User`
	FOREIGN KEY (`associateID`) REFERENCES `User` (`userID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Associate` 
 ADD CONSTRAINT `FK_Associate_Fee_value`
	FOREIGN KEY (`fee_valueID`) REFERENCES `Fee_value` (`fee_valueID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Article_page` 
 ADD CONSTRAINT `FK_Article_page_Public_page`
	FOREIGN KEY (`article_pageID`) REFERENCES `Public_page` (`public_pageID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `App_letter` 
 ADD CONSTRAINT `FK_App_letter_File`
	FOREIGN KEY (`app_letterID`) REFERENCES `File` (`fileID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Admin` 
 ADD CONSTRAINT `FK_Admin_Management`
	FOREIGN KEY (`adminID`) REFERENCES `Management` (`managementID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Activity_en` 
 ADD CONSTRAINT `FK_Activity_en_Activity`
	FOREIGN KEY (`activity_enID`) REFERENCES `Activity` (`activityID`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `Activity` 
 ADD CONSTRAINT `FK_Activity_Content_page`
	FOREIGN KEY (`activityID`) REFERENCES `Content_page` (`content_pageID`) ON DELETE No Action ON UPDATE No Action
;

SET FOREIGN_KEY_CHECKS=1 ;
